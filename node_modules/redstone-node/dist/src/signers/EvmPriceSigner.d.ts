import { TypedMessage } from "eth-sig-util";
import { PricePackage, SignedPricePackage, SerializedPriceData } from "../types";
interface MessageTypeProperty {
    name: string;
    type: string;
}
interface PriceDataMessageType {
    EIP712Domain: MessageTypeProperty[];
    PriceData: MessageTypeProperty[];
    [additionalProperties: string]: MessageTypeProperty[];
}
export default class EvmPriceSigner {
    private _domainData;
    constructor(version?: string, chainId?: number);
    getDataToSign(priceData: SerializedPriceData): TypedMessage<PriceDataMessageType>;
    getLiteDataBytesString(priceData: SerializedPriceData): string;
    private getLiteDataToSign;
    calculateEvmSignature(priceData: SerializedPriceData, privateKey: string): string;
    calculateLiteEvmSignature(priceData: SerializedPriceData, privateKey: string): string;
    serializeToMessage(pricePackage: PricePackage): SerializedPriceData;
    signPricePackage(pricePackage: PricePackage, privateKey: string): SignedPricePackage;
    verifySignature(signedPricePackage: SignedPricePackage): boolean;
    verifyLiteSignature(signedPricePackage: SignedPricePackage): boolean;
}
export {};
