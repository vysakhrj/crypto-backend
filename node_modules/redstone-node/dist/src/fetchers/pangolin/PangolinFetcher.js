"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.PangolinFetcher = void 0;
var BaseFetcher_1 = require("../BaseFetcher");
var pangolin_pairs_json_1 = __importDefault(require("./pangolin-pairs.json"));
var graph_proxy_1 = __importDefault(require("../../utils/graph-proxy"));
var PANGOLIN_SUBGRAPH_FETCHER = "https://api.thegraph.com/subgraphs/name/dasconnor/pangolin-dex";
var MIN_RESERVE_USD = 10;
var PangolinFetcher = /** @class */ (function (_super) {
    __extends(PangolinFetcher, _super);
    function PangolinFetcher(name, baseTokenSymbol) {
        var _this = _super.call(this, name) || this;
        _this.baseTokenSymbol = baseTokenSymbol;
        _this.retryForInvalidResponse = true;
        return _this;
    }
    PangolinFetcher.prototype.fetchData = function (symbols) {
        return __awaiter(this, void 0, void 0, function () {
            var ids, query;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        ids = this.getPairIdsForSymbols(symbols);
                        query = "{\n      pairs(where: { id_in: " + JSON.stringify(ids) + " }) {\n        token0 {\n          symbol\n        }\n        token1 {\n          symbol\n        }\n        reserve0\n        reserve1\n        reserveUSD\n      }\n    }";
                        return [4 /*yield*/, graph_proxy_1.default.executeQuery(PANGOLIN_SUBGRAPH_FETCHER, query)];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    PangolinFetcher.prototype.validateResponse = function (response) {
        return response !== undefined && response.data !== undefined;
    };
    PangolinFetcher.prototype.extractPrices = function (response) {
        return __awaiter(this, void 0, void 0, function () {
            var pricesObj, _i, _a, pair, symbol0, symbol1, reserveUSD, value, value;
            return __generator(this, function (_b) {
                pricesObj = {};
                for (_i = 0, _a = response.data.pairs; _i < _a.length; _i++) {
                    pair = _a[_i];
                    symbol0 = pair.token0.symbol;
                    symbol1 = pair.token1.symbol;
                    reserveUSD = parseFloat(pair.reserveUSD);
                    if (reserveUSD > MIN_RESERVE_USD) {
                        if (symbol0 === this.baseTokenSymbol) {
                            value = reserveUSD / (2 * parseFloat(pair.reserve1));
                            pricesObj[symbol1] = value;
                        }
                        else {
                            value = reserveUSD / (2 * parseFloat(pair.reserve0));
                            pricesObj[symbol0] = value;
                        }
                    }
                }
                return [2 /*return*/, pricesObj];
            });
        });
    };
    PangolinFetcher.prototype.getPairIdsForSymbols = function (symbols) {
        var pairIds = [];
        for (var _i = 0, pangolinPairs_1 = pangolin_pairs_json_1.default; _i < pangolinPairs_1.length; _i++) {
            var pair = pangolinPairs_1[_i];
            var symbol0 = pair.token0.symbol;
            var symbol1 = pair.token1.symbol;
            var pairIdShouldBeIncluded = (symbol0 == this.baseTokenSymbol && symbols.includes(symbol1))
                || (symbol1 == this.baseTokenSymbol && symbols.includes(symbol0));
            if (pairIdShouldBeIncluded) {
                pairIds.push(pair.id);
            }
        }
        return pairIds;
    };
    return PangolinFetcher;
}(BaseFetcher_1.BaseFetcher));
exports.PangolinFetcher = PangolinFetcher;
;
