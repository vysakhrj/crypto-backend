import { JWKInterface } from "arweave/node/lib/wallet";
import { NodeConfig } from "./types";
export declare const MANIFEST_REFRESH_INTERVAL: number;
export default class NodeRunner {
    private readonly arweaveService;
    private readonly providerAddress;
    private readonly nodeConfig;
    private readonly version;
    private lastManifestLoadTimestamp?;
    private currentManifest?;
    private pricesService?;
    private tokensBySource?;
    private newManifest;
    private priceSignerService?;
    private broadcaster;
    private constructor();
    static create(jwk: JWKInterface, nodeConfig: NodeConfig): Promise<NodeRunner>;
    run(): Promise<void>;
    private exitIfBalanceTooLow;
    private runIteration;
    private safeProcessManifestTokens;
    private warnIfARBalanceLow;
    private doProcessTokens;
    private fetchPrices;
    private broadcastPrices;
    private static printAggregatedPrices;
    private broadcastEvmPricePackage;
    private broadcastSignedPricePackage;
    private static reThrowIfManifestConfigError;
    private maybeLoadManifestFromSmartContract;
    private handleLoadedManifest;
    private useNewManifest;
}
